# -*- coding: utf-8 -*-
"""2023-02-05-iterated-prisoners-dilemma.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lP4C4-h6Wcsxmn7MjyoiChs8lOpCzEG3

# 2023-02-05 Iterated prisoner's dilemma

starlog

2/26 Vishal: added TitForTwoTats, GrimTrigger

2/11 Mac: added two agents and probably shitty code for a tournament. altered one bit of pre-existing code to change score report to report avg score instead of total
"""

from __future__ import annotations


import pandas as pd

from NathanExploit import NathanExploit
from agents import TitForTat, Mac, Cynic, Random, Rube, Troll, Binomial, AdvancedPredict, PatternMatcher, IForgiveYou, \
    TitForTwoTats, GrimTrigger, Stephanie, EricTheEvil3
from utils import play_iterated_prisoners_dilemma


if __name__ == '__main__':

    agents = [TitForTat(), Mac(), Cynic(), Random(random_seed=1), Rube(), Troll(), Binomial(), AdvancedPredict(),
              PatternMatcher(), IForgiveYou(), AdvancedPredict(), EricTheEvil3(), TitForTwoTats(), GrimTrigger(),
              Stephanie(), NathanExploit()]
    num_agents = len(agents)
    agent_names = [agent.get_name() for agent in agents]
    results = []
    agg_results = []

    for first_agent, agent_name in zip(agents, agent_names):
        results.append([])
        agg_results.append([agent_name, 0])
        for opponent in agents:
            match = play_iterated_prisoners_dilemma(
                agent_1=first_agent,
                agent_2=opponent,
            )
            results[-1].append(match)
            agg_results[-1][1] = agg_results[-1][1] + results[-1][-1][0]
        agg_results[-1][1] = round(agg_results[-1][1], 2)
    print(results)
    print(*sorted(agg_results, key=lambda x: x[1], reverse=True), sep='\n')
    df = pd.DataFrame(results, columns=agent_names, index=agent_names)
    print(df)

    print(play_iterated_prisoners_dilemma(
        agent_1=NathanExploit(),
        agent_2=Random(random_seed=1),
    ))

    print(play_iterated_prisoners_dilemma(
        agent_1=NathanExploit(),
        agent_2=TitForTat(),
    ))


